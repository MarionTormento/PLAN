<!-- -*- mode: XML -*-  -->

<launch>
    <arg name="robot_base"          default="base" />           <!-- Name of the robot base frame -->
    <arg name="kinect_frame"         default="kinect2_ir_optical_frame" />                   <!-- Name of lidar frame -->
    <arg name="servo_frame"         default="kinect_servo_frame" />          <!-- Name of the kinect frame when servo is zero -->

    <!-- Start the kinect motor controller -->
    <include file="$(find dynamixel_workbench_controllers)/launch/position_control.launch" >
        <arg name="device_name"  value="/dev/ttyUSB0" />    <!-- USB port -->
        <arg name="baud_rate"  value="1000000" />    <!-- baud rate of the servo -->
        <arg name="scan_range"  value="1" />    <!-- baud rate of the servo -->
    </include> 

  <!-- Run the static tf transforms from the static servo frame to the robot base -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="world_to_servokinect"  args="0.2452 -0.0501 0.9063 0.5 -0.5 0.5 -0.5 $(arg robot_base) $(arg servo_frame)" />

    <!-- Start servo position tf broadcaster -->
    <node pkg="embedded_control" type="kinect_3d_tf_broadcaster.py" name="kinect_3d_tf_br" required="true" respawn="false" output="screen" args="--clock">
        <param name="servo_frame"           value="$(arg servo_frame)" />
        <param name="kinect_frame"           value="$(arg kinect_frame)" />
    </node>

    <!-- Start the GUI to control motor speed and monitor temperature -->
<!--     <node name="kinect_motor_GUI" pkg="embedded_control" type="gui_kinect.py" required="true" output="screen">
    </node> -->

</launch>

